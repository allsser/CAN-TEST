package cantest;

import java.io.BufferedInputStream;
import java.io.OutputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadPoolExecutor;

import gnu.io.CommPort;
import gnu.io.CommPortIdentifier;
import gnu.io.SerialPort;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextArea;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.FlowPane;
import javafx.stage.Stage;

public class Exam01_DataPrameReceiver extends Application {

	TextArea textarea;	//메시지 창(받은 메시지를 보여주는 역할)
	Button connBtn;		// 연결버튼(COM포트 연결버튼)
	
	// 사용할 COM 포트를 지정하기 위해서 필요.
	private CommPortIdentifier portIdentifier;
	// 만약 COM 포트를 사용할 수 있고 해당 포트를 open하면 COM 포트 객체를 획득
	private CommPort commport;
	// COM 포트는 종류가 2가지이다. (Serial, Parallel 두가지 종류)
	// CAN 통신은 Serial 통신을 한다. 따라서 COM 포트의 타입을 알아내서 type casting 한다.
	private SerialPort serialPort;
	// Port객체로부터 Stream을 얻어내서 입출력 할 수 있다.
	private BufferedInputStream bis;
	private OutputStream out;
	
	private void printMsg(String msg) {
		Platform.runLater(()->{
			textarea.appendText(msg + "\n");
		});
	}
	
	private void connectPort(String portName) {
		// portName을 이용해 Port에 접근해서 객체를 생성한다.
		try {
			
		}catch (Exception e) {
			System.out.println(e);
		}
	}
	
	@Override
	public void start(Stage primaryStage) throws Exception {
		// 화면구성해서 window 띄우는 코드
		// 화면기본 layout을 설정 => 화면을 동서남북중앙(5개의 영역)으로 분리
		BorderPane root = new BorderPane();
		// BorderPane의 크기를 설정 => 화면에 띄우는 window의 크기 설정
		root.setPrefSize(750, 500);
		
		// Component생성해서 BorderPane에 부착
		textarea = new TextArea();
		root.setCenter(textarea);
		
		connBtn = new Button("COM 포트 연결");
		connBtn.setPrefSize(250, 50);
		connBtn.setOnAction(t->{
			// 버튼에서 Action이 발생(클릭)했을 떄 호출!	
			String portName = "COM6";
			// 포트접속
			connectPort(portName);
		});

		
		FlowPane flowpane = new FlowPane(); // 긴 판넬이라 보면 된다.
		flowpane.setPrefSize(700, 50);
		// flowpane에 버튼을 올려요.
		flowpane.getChildren().add(connBtn);
		root.setBottom(flowpane); // 밑에 판넬을 붙인다.
		
		// Scene객체가 필요.
		Scene scene = new Scene(root);
		primaryStage.setScene(scene);
		primaryStage.setTitle("CAN Data Frame Receiver 예제");
		primaryStage.show();
		
	}
	
	public static void main(String[] args) {
		
		launch();
	}
}
